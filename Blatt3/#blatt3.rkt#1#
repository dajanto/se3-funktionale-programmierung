#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 478 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 22 #"se3-bib/flaggen-module"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Aufgabe 1 Internationale Buchstabiertafel "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; 1.1 Datenstruktur "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"buchstabiertafel"
0 0 24 3 2 #" ("
0 0 14 3 4 #"hash"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 3 #"#\\A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"Alfa"
0 1 24 65 1 #"\t"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 3 #"#\\B"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"Bravo"
0 1 24 65 1 #"\t"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 3 #"#\\C"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Charlie"
0 1 24 65 1 #"\t"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"Delta"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 3 #"#\\,"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Decimal"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 3 #"#\\."
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"Stop"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 108
(
 #"; Es gibt keine gute Alternative zur Hashtable, wenn es um eine 1:1 "
 #"Zuordnung geht (Buchstabe, Schl\303\274ssel). "
) 0 0 24 29 1 #"\n"
0 0 17 3 112
(
 #"; Bei z.B. einer Liste mit Tupeln w\303\244re es schwieriger den pas"
 #"senden Schl\303\274ssel zu einem Buchstaben anzufordern."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; 1.2 Codierungsfunktion"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"buchstabeAbbilden"
0 0 24 3 1 #" "
0 0 14 3 9 #"buchstabe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 16 #"buchstabiertafel"
0 0 24 3 1 #" "
0 0 14 3 9 #"buchstabe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; 1.3 Zusatz"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"alleBuchstabenAbbilden"
0 0 24 3 1 #" "
0 0 14 3 9 #"buchstabe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"charInt"
0 0 24 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 24 3 1 #" "
0 0 14 3 9 #"buchstabe"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 7 #"charInt"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 7 #"charInt"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"buchstabeAbbilden"
0 0 24 3 1 #" "
0 0 14 3 9 #"buchstabe"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 7 #"charInt"
0 0 24 3 1 #" "
0 0 21 3 2 #"97"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 7 #"charInt"
0 0 24 3 1 #" "
0 0 21 3 3 #"122"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"buchstabeAbbilden"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 24 3 1 #" "
0 0 14 3 9 #"buchstabe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 21 3 2 #"32"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 7 #"charInt"
0 0 24 3 1 #" "
0 0 21 3 2 #"44"
0 0 24 3 3 #") ("
0 0 14 3 17 #"buchstabeAbbilden"
0 0 24 3 1 #" "
0 0 14 3 9 #"buchstabe"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 7 #"charInt"
0 0 24 3 1 #" "
0 0 21 3 2 #"46"
0 0 24 3 3 #") ("
0 0 14 3 17 #"buchstabeAbbilden"
0 0 24 3 1 #" "
0 0 14 3 9 #"buchstabe"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; 1.4 Buchstabieren "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"buchstabieren"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"liste"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string->list"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"liste"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"write"
0 0 24 3 2 #" ("
0 0 14 3 22 #"alleBuchstabenAbbilden"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"liste"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"buchstabieren"
0 0 24 3 2 #" ("
0 0 14 3 12 #"list->string"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"liste"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";Aufgabe"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 31 #"Internationales Flaggenalphabet"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; 2.1 Datenstruktur"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"Flaggenalfabet"
0 0 24 3 1 #"("
0 0 14 3 4 #"hash"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"F\""
0 0 24 3 1 #" "
0 0 14 3 1 #"F"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"G\""
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"H\""
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"I\""
0 0 24 3 1 #" "
0 0 14 3 1 #"I"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"J\""
0 0 24 3 1 #" "
0 0 14 3 1 #"J"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"K\""
0 0 24 3 1 #" "
0 0 14 3 1 #"K"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"M\""
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"N\""
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"O\""
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"P\""
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"Q\""
0 0 24 3 1 #" "
0 0 14 3 1 #"Q"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"R\""
0 0 24 3 1 #" "
0 0 14 3 1 #"R"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"S\""
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"T\""
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"V\""
0 0 24 3 1 #" "
0 0 14 3 1 #"V"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"W\""
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"X\""
0 0 24 3 1 #" "
0 0 14 3 1 #"X"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"Y\""
0 0 24 3 1 #" "
0 0 14 3 1 #"Y"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"Z\""
0 0 24 3 1 #" "
0 0 14 3 1 #"Z"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"0\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z0"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"1\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z1"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"2\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z2"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"3\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z3"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"4\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z4"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"5\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z5"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"6\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z6"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"7\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z7"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"8\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z8"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 3 #"\"9\""
0 0 24 3 1 #" "
0 0 14 3 2 #"Z9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; 2.2 Codierungsfunktion"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"FlaggenAbbilden"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 14 #"Flaggenalfabet"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; 2.3 Buchstabieren"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
